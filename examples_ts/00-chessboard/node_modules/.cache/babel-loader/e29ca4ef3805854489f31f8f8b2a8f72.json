{"ast":null,"code":"import _slicedToArray from \"/Users/christrevino/Workspace/react-dnd/packages/documentation/static/examples_ts/00-chessboard/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/christrevino/Workspace/react-dnd/packages/documentation/static/examples_ts/00-chessboard/src/Board.tsx\";\nimport React from 'react';\nimport BoardSquare from './BoardSquare';\nimport { Piece } from './Piece';\n\n/** Styling properties applied to the board element */\nvar boardStyle = {\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  flexWrap: 'wrap'\n  /** Styling properties applied to each square element */\n\n};\nvar squareStyle = {\n  width: '12.5%',\n  height: '12.5%'\n  /**\n   * The chessboard component\n   * @param props The react props\n   */\n\n};\n\nvar Board = function Board(_ref) {\n  var _ref$knightPosition = _slicedToArray(_ref.knightPosition, 2),\n      knightX = _ref$knightPosition[0],\n      knightY = _ref$knightPosition[1];\n\n  function renderSquare(i) {\n    var x = i % 8;\n    var y = Math.floor(i / 8);\n    return React.createElement(\"div\", {\n      key: i,\n      style: squareStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(BoardSquare, {\n      x: x,\n      y: y,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Piece, {\n      isKnight: x === knightX && y === knightY,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })));\n  }\n\n  var squares = [];\n\n  for (var i = 0; i < 64; i += 1) {\n    squares.push(renderSquare(i));\n  }\n\n  return React.createElement(\"div\", {\n    style: boardStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, squares);\n};\n\nexport default Board;","map":{"version":3,"sources":["/Users/christrevino/Workspace/react-dnd/packages/documentation/static/examples_ts/00-chessboard/src/Board.tsx"],"names":["React","BoardSquare","Piece","boardStyle","width","height","display","flexWrap","squareStyle","Board","knightPosition","knightX","knightY","renderSquare","i","x","y","Math","floor","squares","push"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,KAAT,QAAsB,SAAtB;;AAMA;AACA,IAAMC,UAA+B,GAAG;AACvCC,EAAAA,KAAK,EAAE,MADgC;AAEvCC,EAAAA,MAAM,EAAE,MAF+B;AAGvCC,EAAAA,OAAO,EAAE,MAH8B;AAIvCC,EAAAA,QAAQ,EAAE;AAEX;;AANwC,CAAxC;AAOA,IAAMC,WAAgC,GAAG;AAAEJ,EAAAA,KAAK,EAAE,OAAT;AAAkBC,EAAAA,MAAM,EAAE;AAEnE;;;;;AAFyC,CAAzC;;AAMA,IAAMI,KAA2B,GAAG,SAA9BA,KAA8B,OAE9B;AAAA,gDADLC,cACK;AAAA,MADYC,OACZ;AAAA,MADqBC,OACrB;;AACL,WAASC,YAAT,CAAsBC,CAAtB,EAAiC;AAChC,QAAMC,CAAC,GAAGD,CAAC,GAAG,CAAd;AACA,QAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWJ,CAAC,GAAG,CAAf,CAAV;AAEA,WACC;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAa,MAAA,KAAK,EAAEN,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,WAAD;AAAa,MAAA,CAAC,EAAEO,CAAhB;AAAmB,MAAA,CAAC,EAAEC,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAO,MAAA,QAAQ,EAAED,CAAC,KAAKJ,OAAN,IAAiBK,CAAC,KAAKJ,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADD,CADD;AAOA;;AAED,MAAMO,OAAO,GAAG,EAAhB;;AACA,OAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,IAAI,CAA7B,EAAgC;AAC/BK,IAAAA,OAAO,CAACC,IAAR,CAAaP,YAAY,CAACC,CAAD,CAAzB;AACA;;AACD,SAAO;AAAK,IAAA,KAAK,EAAEX,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBgB,OAAzB,CAAP;AACA,CArBD;;AAsBA,eAAeV,KAAf","sourcesContent":["import React from 'react'\nimport BoardSquare from './BoardSquare'\nimport { Piece } from './Piece'\n\nexport interface BoardProps {\n\tknightPosition: [number, number]\n}\n\n/** Styling properties applied to the board element */\nconst boardStyle: React.CSSProperties = {\n\twidth: '100%',\n\theight: '100%',\n\tdisplay: 'flex',\n\tflexWrap: 'wrap',\n}\n/** Styling properties applied to each square element */\nconst squareStyle: React.CSSProperties = { width: '12.5%', height: '12.5%' }\n\n/**\n * The chessboard component\n * @param props The react props\n */\nconst Board: React.FC<BoardProps> = ({\n\tknightPosition: [knightX, knightY],\n}) => {\n\tfunction renderSquare(i: number) {\n\t\tconst x = i % 8\n\t\tconst y = Math.floor(i / 8)\n\n\t\treturn (\n\t\t\t<div key={i} style={squareStyle}>\n\t\t\t\t<BoardSquare x={x} y={y}>\n\t\t\t\t\t<Piece isKnight={x === knightX && y === knightY} />\n\t\t\t\t</BoardSquare>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tconst squares = []\n\tfor (let i = 0; i < 64; i += 1) {\n\t\tsquares.push(renderSquare(i))\n\t}\n\treturn <div style={boardStyle}>{squares}</div>\n}\nexport default Board\n"]},"metadata":{},"sourceType":"module"}