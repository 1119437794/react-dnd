{"ast":null,"code":"import _objectSpread from \"/Users/christrevino/Workspace/react-dnd/packages/documentation/static/examples_ts/00-chessboard/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/christrevino/Workspace/react-dnd/packages/documentation/static/examples_ts/00-chessboard/src/Knight.tsx\";\nimport React from 'react';\nimport { DragSource, DragPreviewImage } from 'react-dnd';\nimport ItemTypes from './ItemTypes';\nimport knightImage from './knightImage';\nvar knightStyle = {\n  fontSize: 40,\n  fontWeight: 'bold',\n  cursor: 'move'\n};\n\nvar Knight = function Knight(_ref) {\n  var connectDragSource = _ref.connectDragSource,\n      connectDragPreview = _ref.connectDragPreview,\n      isDragging = _ref.isDragging;\n  return React.createElement(React.Fragment, null, React.createElement(DragPreviewImage, {\n    connect: connectDragPreview,\n    src: knightImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    ref: connectDragSource,\n    style: _objectSpread({}, knightStyle, {\n      opacity: isDragging ? 0.5 : 1\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"\\u2658\"));\n};\n\nexport default DragSource(ItemTypes.KNIGHT, {\n  beginDrag: function beginDrag() {\n    return {};\n  }\n}, function (connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    connectDragPreview: connect.dragPreview(),\n    isDragging: monitor.isDragging()\n  };\n})(Knight);","map":{"version":3,"sources":["/Users/christrevino/Workspace/react-dnd/packages/documentation/static/examples_ts/00-chessboard/src/Knight.tsx"],"names":["React","DragSource","DragPreviewImage","ItemTypes","knightImage","knightStyle","fontSize","fontWeight","cursor","Knight","connectDragSource","connectDragPreview","isDragging","opacity","KNIGHT","beginDrag","connect","monitor","dragSource","dragPreview"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACCC,UADD,EAMCC,gBAND,QAOO,WAPP;AAQA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,IAAMC,WAAgC,GAAG;AACxCC,EAAAA,QAAQ,EAAE,EAD8B;AAExCC,EAAAA,UAAU,EAAE,MAF4B;AAGxCC,EAAAA,MAAM,EAAE;AAHgC,CAAzC;;AAYA,IAAMC,MAA6B,GAAG,SAAhCA,MAAgC,OAIhC;AAAA,MAHLC,iBAGK,QAHLA,iBAGK;AAAA,MAFLC,kBAEK,QAFLA,kBAEK;AAAA,MADLC,UACK,QADLA,UACK;AACL,SACC,0CACC,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAED,kBAA3B;AAA+C,IAAA,GAAG,EAAEP,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AACC,IAAA,GAAG,EAAEM,iBADN;AAEC,IAAA,KAAK,oBACDL,WADC;AAEJQ,MAAAA,OAAO,EAAED,UAAU,GAAG,GAAH,GAAS;AAFxB,MAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,CADD;AAcA,CAnBD;;AAqBA,eAAeX,UAAU,CACxBE,SAAS,CAACW,MADc,EAExB;AACCC,EAAAA,SAAS,EAAE;AAAA,WAAO,EAAP;AAAA;AADZ,CAFwB,EAKxB,UAACC,OAAD,EAA+BC,OAA/B;AAAA,SAA+D;AAC9DP,IAAAA,iBAAiB,EAAEM,OAAO,CAACE,UAAR,EAD2C;AAE9DP,IAAAA,kBAAkB,EAAEK,OAAO,CAACG,WAAR,EAF0C;AAG9DP,IAAAA,UAAU,EAAEK,OAAO,CAACL,UAAR;AAHkD,GAA/D;AAAA,CALwB,CAAV,CAUbH,MAVa,CAAf","sourcesContent":["import React from 'react'\nimport {\n\tDragSource,\n\tConnectDragSource,\n\tConnectDragPreview,\n\tDragSourceConnector,\n\tDragSourceMonitor,\n\tDragPreviewImage,\n} from 'react-dnd'\nimport ItemTypes from './ItemTypes'\nimport knightImage from './knightImage'\n\nconst knightStyle: React.CSSProperties = {\n\tfontSize: 40,\n\tfontWeight: 'bold',\n\tcursor: 'move',\n}\n\nexport interface KnightProps {\n\tconnectDragSource: ConnectDragSource\n\tconnectDragPreview: ConnectDragPreview\n\tisDragging?: boolean\n}\n\nconst Knight: React.FC<KnightProps> = ({\n\tconnectDragSource,\n\tconnectDragPreview,\n\tisDragging,\n}) => {\n\treturn (\n\t\t<>\n\t\t\t<DragPreviewImage connect={connectDragPreview} src={knightImage} />\n\t\t\t<div\n\t\t\t\tref={connectDragSource}\n\t\t\t\tstyle={{\n\t\t\t\t\t...knightStyle,\n\t\t\t\t\topacity: isDragging ? 0.5 : 1,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tâ™˜\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default DragSource(\n\tItemTypes.KNIGHT,\n\t{\n\t\tbeginDrag: () => ({}),\n\t},\n\t(connect: DragSourceConnector, monitor: DragSourceMonitor) => ({\n\t\tconnectDragSource: connect.dragSource(),\n\t\tconnectDragPreview: connect.dragPreview(),\n\t\tisDragging: monitor.isDragging(),\n\t}),\n)(Knight)\n"]},"metadata":{},"sourceType":"module"}