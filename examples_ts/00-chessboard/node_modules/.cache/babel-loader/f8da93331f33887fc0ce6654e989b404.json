{"ast":null,"code":"var _jsxFileName = \"/Users/christrevino/Workspace/react-dnd/packages/documentation/static/examples_ts/00-chessboard/src/BoardSquare.tsx\";\nimport React from 'react';\nimport { DropTarget } from 'react-dnd';\nimport { Square } from './Square';\nimport { canMoveKnight, moveKnight } from './Game';\nimport ItemTypes from './ItemTypes';\nimport Overlay from './Overlay';\nvar boardSquareStyle = {\n  position: 'relative',\n  width: '100%',\n  height: '100%'\n};\n\nvar BoardSquare = function BoardSquare(_ref) {\n  var x = _ref.x,\n      y = _ref.y,\n      connectDropTarget = _ref.connectDropTarget,\n      isOver = _ref.isOver,\n      canDrop = _ref.canDrop,\n      children = _ref.children;\n  var black = (x + y) % 2 === 1;\n  return connectDropTarget(React.createElement(\"div\", {\n    style: boardSquareStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Square, {\n    black: black,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, children), isOver && !canDrop && React.createElement(Overlay, {\n    color: \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), !isOver && canDrop && React.createElement(Overlay, {\n    color: \"yellow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), isOver && canDrop && React.createElement(Overlay, {\n    color: \"green\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })));\n};\n\nexport default DropTarget(ItemTypes.KNIGHT, {\n  canDrop: function canDrop(props) {\n    return canMoveKnight(props.x, props.y);\n  },\n  drop: function drop(props) {\n    return moveKnight(props.x, props.y);\n  }\n}, function (connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: !!monitor.isOver(),\n    canDrop: !!monitor.canDrop()\n  };\n})(BoardSquare);","map":{"version":3,"sources":["/Users/christrevino/Workspace/react-dnd/packages/documentation/static/examples_ts/00-chessboard/src/BoardSquare.tsx"],"names":["React","DropTarget","Square","canMoveKnight","moveKnight","ItemTypes","Overlay","boardSquareStyle","position","width","height","BoardSquare","x","y","connectDropTarget","isOver","canDrop","children","black","KNIGHT","props","drop","connect","monitor","dropTarget"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACCC,UADD,QAKO,WALP;AAMA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,QAA1C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAaA,IAAMC,gBAAqC,GAAG;AAC7CC,EAAAA,QAAQ,EAAE,UADmC;AAE7CC,EAAAA,KAAK,EAAE,MAFsC;AAG7CC,EAAAA,MAAM,EAAE;AAHqC,CAA9C;;AAMA,IAAMC,WAAuC,GAAG,SAA1CA,WAA0C,OAO1C;AAAA,MANLC,CAMK,QANLA,CAMK;AAAA,MALLC,CAKK,QALLA,CAKK;AAAA,MAJLC,iBAIK,QAJLA,iBAIK;AAAA,MAHLC,MAGK,QAHLA,MAGK;AAAA,MAFLC,OAEK,QAFLA,OAEK;AAAA,MADLC,QACK,QADLA,QACK;AACL,MAAMC,KAAK,GAAG,CAACN,CAAC,GAAGC,CAAL,IAAU,CAAV,KAAgB,CAA9B;AACA,SAAOC,iBAAiB,CACvB;AAAK,IAAA,KAAK,EAAEP,gBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEW,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,QAAvB,CADD,EAEEF,MAAM,IAAI,CAACC,OAAX,IAAsB,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFxB,EAGE,CAACD,MAAD,IAAWC,OAAX,IAAsB,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHxB,EAIED,MAAM,IAAIC,OAAV,IAAqB,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJvB,CADuB,CAAxB;AAQA,CAjBD;;AAmBA,eAAef,UAAU,CACxBI,SAAS,CAACc,MADc,EAExB;AACCH,EAAAA,OAAO,EAAE,iBAACI,KAAD;AAAA,WAA6BjB,aAAa,CAACiB,KAAK,CAACR,CAAP,EAAUQ,KAAK,CAACP,CAAhB,CAA1C;AAAA,GADV;AAECQ,EAAAA,IAAI,EAAE,cAACD,KAAD;AAAA,WAA6BhB,UAAU,CAACgB,KAAK,CAACR,CAAP,EAAUQ,KAAK,CAACP,CAAhB,CAAvC;AAAA;AAFP,CAFwB,EAMxB,UAACS,OAAD,EAA+BC,OAA/B,EAA8D;AAC7D,SAAO;AACNT,IAAAA,iBAAiB,EAAEQ,OAAO,CAACE,UAAR,EADb;AAENT,IAAAA,MAAM,EAAE,CAAC,CAACQ,OAAO,CAACR,MAAR,EAFJ;AAGNC,IAAAA,OAAO,EAAE,CAAC,CAACO,OAAO,CAACP,OAAR;AAHL,GAAP;AAKA,CAZuB,CAAV,CAabL,WAba,CAAf","sourcesContent":["import React from 'react'\nimport {\n\tDropTarget,\n\tDropTargetMonitor,\n\tDropTargetConnector,\n\tConnectDropTarget,\n} from 'react-dnd'\nimport { Square } from './Square'\nimport { canMoveKnight, moveKnight } from './Game'\nimport ItemTypes from './ItemTypes'\nimport Overlay from './Overlay'\n\nexport interface BoardSquareProps {\n\tx: number\n\ty: number\n\tchildren: any\n\n\t// Collected Props\n\tisOver: boolean\n\tcanDrop: boolean\n\tconnectDropTarget: ConnectDropTarget\n}\n\nconst boardSquareStyle: React.CSSProperties = {\n\tposition: 'relative',\n\twidth: '100%',\n\theight: '100%',\n}\n\nconst BoardSquare: React.FC<BoardSquareProps> = ({\n\tx,\n\ty,\n\tconnectDropTarget,\n\tisOver,\n\tcanDrop,\n\tchildren,\n}) => {\n\tconst black = (x + y) % 2 === 1\n\treturn connectDropTarget(\n\t\t<div style={boardSquareStyle}>\n\t\t\t<Square black={black}>{children}</Square>\n\t\t\t{isOver && !canDrop && <Overlay color=\"red\" />}\n\t\t\t{!isOver && canDrop && <Overlay color=\"yellow\" />}\n\t\t\t{isOver && canDrop && <Overlay color=\"green\" />}\n\t\t</div>,\n\t)\n}\n\nexport default DropTarget(\n\tItemTypes.KNIGHT,\n\t{\n\t\tcanDrop: (props: BoardSquareProps) => canMoveKnight(props.x, props.y),\n\t\tdrop: (props: BoardSquareProps) => moveKnight(props.x, props.y),\n\t},\n\t(connect: DropTargetConnector, monitor: DropTargetMonitor) => {\n\t\treturn {\n\t\t\tconnectDropTarget: connect.dropTarget(),\n\t\t\tisOver: !!monitor.isOver(),\n\t\t\tcanDrop: !!monitor.canDrop(),\n\t\t}\n\t},\n)(BoardSquare)\n"]},"metadata":{},"sourceType":"module"}