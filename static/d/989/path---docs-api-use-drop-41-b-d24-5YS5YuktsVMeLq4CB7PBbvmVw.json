{"data":{"currentPage":{"html":"<h2>EXPERIMENTAL API - UNSTABLE</h2>\n<p><em>New to React DnD? <a href=\"/react-dnd/docs/overview\">Read the overview</a> before jumping into the docs.</em></p>\n<h1>useDrop</h1>\n<p>A hook to use the current component as a drop target.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> __EXPERIMENTAL_DND_HOOKS_THAT_MAY_CHANGE_AND_BREAK_MY_BUILD__ <span class=\"token keyword\">as</span> dnd <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dnd'</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> useDrop <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> dnd\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">myDropTarget</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>collectedProps<span class=\"token punctuation\">,</span> drop<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useDrop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    accept<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>div ref<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>drop<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Drop Target<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>Parameters</h4>\n<ul>\n<li><strong><code class=\"language-text\">spec</code></strong> A specification object, see below for details on how to construct this</li>\n</ul>\n<h4>Return Value Array</h4>\n<ul>\n<li><strong><code class=\"language-text\">Index 0</code></strong>: An object containing collected properties from the collect function. If no <code class=\"language-text\">collect</code> function is defined, an empty object is returned.</li>\n<li><strong><code class=\"language-text\">Index 1</code></strong>: A connector function for the drop target. This must be attached to the drop-target portion of the DOM.</li>\n</ul>\n<h3>Specification Object Members</h3>\n<ul>\n<li>\n<p><strong><code class=\"language-text\">accept</code></strong>: Required. A string, an ES6 symbol, an array of either, or a function that returns either of those, given component's <code class=\"language-text\">props</code>. This drop target will only react to the items produced by the <a href=\"/react-dnd/docs/api/drag-source\">drag sources</a> of the specified type or types. Read the <a href=\"/react-dnd/docs/overview\">overview</a> to learn more about the items and types.</p>\n</li>\n<li>\n<p><strong><code class=\"language-text\">options</code></strong>: Optional. A plain object. If some of the props to your component are not scalar (that is, are not primitive values or functions), specifying a custom <code class=\"language-text\">arePropsEqual(props, otherProps)</code> function inside the <code class=\"language-text\">options</code> object can improve the performance. Unless you have performance problems, don't worry about it.</p>\n</li>\n<li>\n<p><strong><code class=\"language-text\">drop(item, monitor)</code></strong>: Optional. Called when a compatible item is dropped on the target. You may either return undefined, or a plain object. If you return an object, it is going to become <em>the drop result</em> and will be available to the drag source in its <code class=\"language-text\">endDrag</code> method as <code class=\"language-text\">monitor.getDropResult()</code>. This is useful in case you want to perform different actions depending on which target received the drop. If you have nested drop targets, you can test whether a nested target has already handled <code class=\"language-text\">drop</code> by checking <code class=\"language-text\">monitor.didDrop()</code> and <code class=\"language-text\">monitor.getDropResult()</code>. Both this method and the source's <code class=\"language-text\">endDrag</code> method are good places to fire Flux actions. This method will not be called if <code class=\"language-text\">canDrop()</code> is defined and returns <code class=\"language-text\">false</code>.</p>\n</li>\n<li>\n<p><strong><code class=\"language-text\">hover(item, monitor)</code></strong>: Optional. Called when an item is hovered over the component. You can check <code class=\"language-text\">monitor.isOver({ shallow: true })</code> to test whether the hover happens over <em>just</em> the current target, or over a nested one. Unlike <code class=\"language-text\">drop()</code>, this method will be called even if <code class=\"language-text\">canDrop()</code> is defined and returns <code class=\"language-text\">false</code>. You can check <code class=\"language-text\">monitor.canDrop()</code> to test whether this is the case.</p>\n</li>\n<li>\n<p><strong><code class=\"language-text\">canDrop(item, monitor)</code></strong>: Optional. Use it to specify whether the drop target is able to accept the item. If you want to always allow it, just omit this method. Specifying it is handy if you'd like to disable dropping based on some predicate over <code class=\"language-text\">props</code> or <code class=\"language-text\">monitor.getItem()</code>. <em>Note: You may not call <code class=\"language-text\">monitor.canDrop()</code> inside this method.</em></p>\n</li>\n<li>\n<p><strong><code class=\"language-text\">collect</code></strong>: Optional. The collecting function. It should return a plain object of the props to return for injection into your component. It receives two parameters, <code class=\"language-text\">monitor</code> and <code class=\"language-text\">props</code>. Read the <a href=\"/react-dnd/docs/overview\">overview</a> for an introduction to the monitors and the collecting function. See the collecting function described in detail in the next section.</p>\n</li>\n</ul>","htmlAst":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"EXPERIMENTAL API - UNSTABLE"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"New to React DnD? "},{"type":"element","tagName":"a","properties":{"href":"/react-dnd/docs/overview"},"children":[{"type":"text","value":"Read the overview"}]},{"type":"text","value":" before jumping into the docs."}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"useDrop"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A hook to use the current component as a drop target."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"js"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-js"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"import"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" __EXPERIMENTAL_DND_HOOKS_THAT_MAY_CHANGE_AND_BREAK_MY_BUILD__ "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"as"}]},{"type":"text","value":" dnd "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"from"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"'react-dnd'"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":" useDrop "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" dnd\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"function"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"myDropTarget"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","parameter"]},"children":[{"type":"text","value":"props"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"text","value":"collectedProps"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":" drop"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"useDrop"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"("}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"\n    accept"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":","}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":")"}]},{"type":"text","value":"\n\n  "},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"return"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"div ref"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"{"}]},{"type":"text","value":"drop"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"text","value":"Drop Target"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"/"}]},{"type":"text","value":"div"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"}"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"Parameters"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"spec"}]}]},{"type":"text","value":" A specification object, see below for details on how to construct this"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"Return Value Array"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Index 0"}]}]},{"type":"text","value":": An object containing collected properties from the collect function. If no "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"collect"}]},{"type":"text","value":" function is defined, an empty object is returned."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Index 1"}]}]},{"type":"text","value":": A connector function for the drop target. This must be attached to the drop-target portion of the DOM."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Specification Object Members"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"accept"}]}]},{"type":"text","value":": Required. A string, an ES6 symbol, an array of either, or a function that returns either of those, given component's "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"props"}]},{"type":"text","value":". This drop target will only react to the items produced by the "},{"type":"element","tagName":"a","properties":{"href":"/react-dnd/docs/api/drag-source"},"children":[{"type":"text","value":"drag sources"}]},{"type":"text","value":" of the specified type or types. Read the "},{"type":"element","tagName":"a","properties":{"href":"/react-dnd/docs/overview"},"children":[{"type":"text","value":"overview"}]},{"type":"text","value":" to learn more about the items and types."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"options"}]}]},{"type":"text","value":": Optional. A plain object. If some of the props to your component are not scalar (that is, are not primitive values or functions), specifying a custom "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"arePropsEqual(props, otherProps)"}]},{"type":"text","value":" function inside the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"options"}]},{"type":"text","value":" object can improve the performance. Unless you have performance problems, don't worry about it."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"drop(item, monitor)"}]}]},{"type":"text","value":": Optional. Called when a compatible item is dropped on the target. You may either return undefined, or a plain object. If you return an object, it is going to become "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"the drop result"}]},{"type":"text","value":" and will be available to the drag source in its "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"endDrag"}]},{"type":"text","value":" method as "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"monitor.getDropResult()"}]},{"type":"text","value":". This is useful in case you want to perform different actions depending on which target received the drop. If you have nested drop targets, you can test whether a nested target has already handled "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"drop"}]},{"type":"text","value":" by checking "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"monitor.didDrop()"}]},{"type":"text","value":" and "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"monitor.getDropResult()"}]},{"type":"text","value":". Both this method and the source's "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"endDrag"}]},{"type":"text","value":" method are good places to fire Flux actions. This method will not be called if "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"canDrop()"}]},{"type":"text","value":" is defined and returns "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"false"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"hover(item, monitor)"}]}]},{"type":"text","value":": Optional. Called when an item is hovered over the component. You can check "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"monitor.isOver({ shallow: true })"}]},{"type":"text","value":" to test whether the hover happens over "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"just"}]},{"type":"text","value":" the current target, or over a nested one. Unlike "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"drop()"}]},{"type":"text","value":", this method will be called even if "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"canDrop()"}]},{"type":"text","value":" is defined and returns "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"false"}]},{"type":"text","value":". You can check "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"monitor.canDrop()"}]},{"type":"text","value":" to test whether this is the case."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"canDrop(item, monitor)"}]}]},{"type":"text","value":": Optional. Use it to specify whether the drop target is able to accept the item. If you want to always allow it, just omit this method. Specifying it is handy if you'd like to disable dropping based on some predicate over "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"props"}]},{"type":"text","value":" or "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"monitor.getItem()"}]},{"type":"text","value":". "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Note: You may not call "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"monitor.canDrop()"}]},{"type":"text","value":" inside this method."}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"collect"}]}]},{"type":"text","value":": Optional. The collecting function. It should return a plain object of the props to return for injection into your component. It receives two parameters, "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"monitor"}]},{"type":"text","value":" and "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"props"}]},{"type":"text","value":". Read the "},{"type":"element","tagName":"a","properties":{"href":"/react-dnd/docs/overview"},"children":[{"type":"text","value":"overview"}]},{"type":"text","value":" for an introduction to the monitors and the collecting function. See the collecting function described in detail in the next section."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]}],"data":{"quirksMode":false}},"frontmatter":{"path":"/docs/api/use-drop","title":"useDrop"}},"toc":{"edges":[{"node":{"frontmatter":{"title":"Testing","path":"/docs/testing"}}},{"node":{"frontmatter":{"title":"Troubleshooting","path":"/docs/troubleshooting"}}},{"node":{"frontmatter":{"title":"DragDropContext","path":"/docs/api/drag-drop-context"}}},{"node":{"frontmatter":{"title":"DragDropContextProvider","path":"/docs/api/drag-drop-context-provider"}}},{"node":{"frontmatter":{"title":"DragLayer","path":"/docs/api/drag-layer"}}},{"node":{"frontmatter":{"title":"DragPreviewImage","path":"/docs/api/drag-preview-image"}}},{"node":{"frontmatter":{"title":"DragSourceConnector","path":"/docs/api/drag-source-connector"}}},{"node":{"frontmatter":{"title":"DropTargetConnector","path":"/docs/api/drop-target-connector"}}},{"node":{"frontmatter":{"title":"DragSourceMonitor","path":"/docs/api/drag-source-monitor"}}},{"node":{"frontmatter":{"title":"DragLayerMonitor","path":"/docs/api/drag-layer-monitor"}}},{"node":{"frontmatter":{"title":"DropTargetMonitor","path":"/docs/api/drop-target-monitor"}}},{"node":{"frontmatter":{"title":"HTML5 Backend","path":"/docs/backends/html5"}}},{"node":{"frontmatter":{"title":"Test Backend","path":"/docs/backends/test"}}},{"node":{"frontmatter":{"title":"Touch Backend","path":"/docs/backends/touch-backend"}}},{"node":{"frontmatter":{"title":"useDrag","path":"/docs/api/use-drag"}}},{"node":{"frontmatter":{"title":"useDrag","path":"/docs/api/use-drag-layer"}}},{"node":{"frontmatter":{"title":"useDrop","path":"/docs/api/use-drop"}}},{"node":{"frontmatter":{"title":"FAQ","path":"/docs/faq"}}},{"node":{"frontmatter":{"title":"Overview","path":"/docs/overview"}}},{"node":{"frontmatter":{"title":"DragSource","path":"/docs/api/drag-source"}}},{"node":{"frontmatter":{"title":"DropTarget","path":"/docs/api/drop-target"}}},{"node":{"frontmatter":{"title":"Tutorial","path":"/docs/tutorial"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false}}