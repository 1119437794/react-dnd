{"data":{"currentPage":{"html":"<p><em>New to React DnD? <a href=\"/react-dnd/docs/overview\">Read the overview</a> before jumping into the docs.</em></p>\n<h1>DragLayerMonitor</h1>\n<p><code class=\"language-text\">DragLayerMonitor</code> is an object passed to a collecting function of the <a href=\"/react-dnd/docs/api/drag-layer\"><code class=\"language-text\">DragLayer</code></a>. Its methods let you get information about the global drag state.</p>\n<h3>Methods</h3>\n<ul>\n<li>\n<p><strong><code class=\"language-text\">isDragging()</code></strong>: Returns <code class=\"language-text\">true</code> if a drag operation is in progress. Returns <code class=\"language-text\">false</code> otherwise.</p>\n</li>\n<li>\n<p><strong><code class=\"language-text\">getItemType()</code></strong>: Returns a string or an ES6 symbol identifying the type of the current dragged item. Returns <code class=\"language-text\">null</code> if no item is being dragged.</p>\n</li>\n<li>\n<p><strong><code class=\"language-text\">getItem()</code></strong>: Returns a plain object representing the currently dragged item. Every drag source must specify it by returning an object from its <code class=\"language-text\">beginDrag()</code> method. Returns <code class=\"language-text\">null</code> if no item is being dragged.</p>\n</li>\n<li>\n<p><strong><code class=\"language-text\">getInitialClientOffset()</code></strong>: Returns the <code class=\"language-text\">{ x, y }</code> client offset of the pointer at the time when the current drag operation has started. Returns <code class=\"language-text\">null</code> if no item is being dragged.</p>\n</li>\n<li>\n<p><strong><code class=\"language-text\">getInitialSourceClientOffset()</code></strong>: Returns the <code class=\"language-text\">{ x, y }</code> client offset of the drag source component's root DOM node at the time when the current drag operation has started. Returns <code class=\"language-text\">null</code> if no item is being dragged.</p>\n</li>\n<li>\n<p><strong><code class=\"language-text\">getClientOffset()</code></strong>: Returns the last recorded <code class=\"language-text\">{ x, y }</code> client offset of the pointer while a drag operation is in progress. Returns <code class=\"language-text\">null</code> if no item is being dragged.</p>\n</li>\n<li>\n<p><strong><code class=\"language-text\">getDifferenceFromInitialOffset()</code></strong>: Returns the <code class=\"language-text\">{ x, y }</code> difference between the last recorded client offset of the pointer and the client offset when current the drag operation has started. Returns <code class=\"language-text\">null</code> if no item is being dragged.</p>\n</li>\n<li>\n<p><strong><code class=\"language-text\">getSourceClientOffset()</code></strong>: Returns the projected <code class=\"language-text\">{ x, y }</code> client offset of the drag source component's root DOM node, based on its position at the time when the current drag operation has started, and the movement difference. Returns <code class=\"language-text\">null</code> if no item is being dragged.</p>\n</li>\n</ul>","htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"New to React DnD? "},{"type":"element","tagName":"a","properties":{"href":"/react-dnd/docs/overview"},"children":[{"type":"text","value":"Read the overview"}]},{"type":"text","value":" before jumping into the docs."}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"DragLayerMonitor"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"DragLayerMonitor"}]},{"type":"text","value":" is an object passed to a collecting function of the "},{"type":"element","tagName":"a","properties":{"href":"/react-dnd/docs/api/drag-layer"},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"DragLayer"}]}]},{"type":"text","value":". Its methods let you get information about the global drag state."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Methods"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"isDragging()"}]}]},{"type":"text","value":": Returns "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"true"}]},{"type":"text","value":" if a drag operation is in progress. Returns "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"false"}]},{"type":"text","value":" otherwise."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"getItemType()"}]}]},{"type":"text","value":": Returns a string or an ES6 symbol identifying the type of the current dragged item. Returns "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"null"}]},{"type":"text","value":" if no item is being dragged."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"getItem()"}]}]},{"type":"text","value":": Returns a plain object representing the currently dragged item. Every drag source must specify it by returning an object from its "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"beginDrag()"}]},{"type":"text","value":" method. Returns "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"null"}]},{"type":"text","value":" if no item is being dragged."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"getInitialClientOffset()"}]}]},{"type":"text","value":": Returns the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"{ x, y }"}]},{"type":"text","value":" client offset of the pointer at the time when the current drag operation has started. Returns "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"null"}]},{"type":"text","value":" if no item is being dragged."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"getInitialSourceClientOffset()"}]}]},{"type":"text","value":": Returns the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"{ x, y }"}]},{"type":"text","value":" client offset of the drag source component's root DOM node at the time when the current drag operation has started. Returns "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"null"}]},{"type":"text","value":" if no item is being dragged."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"getClientOffset()"}]}]},{"type":"text","value":": Returns the last recorded "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"{ x, y }"}]},{"type":"text","value":" client offset of the pointer while a drag operation is in progress. Returns "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"null"}]},{"type":"text","value":" if no item is being dragged."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"getDifferenceFromInitialOffset()"}]}]},{"type":"text","value":": Returns the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"{ x, y }"}]},{"type":"text","value":" difference between the last recorded client offset of the pointer and the client offset when current the drag operation has started. Returns "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"null"}]},{"type":"text","value":" if no item is being dragged."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"getSourceClientOffset()"}]}]},{"type":"text","value":": Returns the projected "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"{ x, y }"}]},{"type":"text","value":" client offset of the drag source component's root DOM node, based on its position at the time when the current drag operation has started, and the movement difference. Returns "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"null"}]},{"type":"text","value":" if no item is being dragged."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]}],"data":{"quirksMode":false}},"frontmatter":{"path":"/docs/api/drag-layer-monitor","title":"DragLayerMonitor"}},"toc":{"edges":[{"node":{"frontmatter":{"title":"Testing","path":"/docs/testing"}}},{"node":{"frontmatter":{"title":"Troubleshooting","path":"/docs/troubleshooting"}}},{"node":{"frontmatter":{"title":"DragDropContext","path":"/docs/api/drag-drop-context"}}},{"node":{"frontmatter":{"title":"DragDropContextProvider","path":"/docs/api/drag-drop-context-provider"}}},{"node":{"frontmatter":{"title":"DragLayer","path":"/docs/api/drag-layer"}}},{"node":{"frontmatter":{"title":"DragPreviewImage","path":"/docs/api/drag-preview-image"}}},{"node":{"frontmatter":{"title":"HTML5 Backend","path":"/docs/backends/html5"}}},{"node":{"frontmatter":{"title":"Test Backend","path":"/docs/backends/test"}}},{"node":{"frontmatter":{"title":"Touch Backend","path":"/docs/backends/touch-backend"}}},{"node":{"frontmatter":{"title":"DragLayerMonitor","path":"/docs/api/drag-layer-monitor"}}},{"node":{"frontmatter":{"title":"DragSourceMonitor","path":"/docs/api/drag-source-monitor"}}},{"node":{"frontmatter":{"title":"DropTargetMonitor","path":"/docs/api/drop-target-monitor"}}},{"node":{"frontmatter":{"title":"DragSourceConnector","path":"/docs/api/drag-source-connector"}}},{"node":{"frontmatter":{"title":"DropTargetConnector","path":"/docs/api/drop-target-connector"}}},{"node":{"frontmatter":{"title":"useDrag","path":"/docs/api/use-drag"}}},{"node":{"frontmatter":{"title":"useDrag","path":"/docs/api/use-drag-layer"}}},{"node":{"frontmatter":{"title":"useDrop","path":"/docs/api/use-drop"}}},{"node":{"frontmatter":{"title":"FAQ","path":"/docs/faq"}}},{"node":{"frontmatter":{"title":"Overview","path":"/docs/overview"}}},{"node":{"frontmatter":{"title":"DragSource","path":"/docs/api/drag-source"}}},{"node":{"frontmatter":{"title":"DropTarget","path":"/docs/api/drop-target"}}},{"node":{"frontmatter":{"title":"Tutorial","path":"/docs/tutorial"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false}}